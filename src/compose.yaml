name: ${PROJECT_NAME}-${ENVIRONMENT}
services:
  server:
    build: .
    # volumes:
    # - ./static:/code/static
    env_file:
      - .env
    entrypoint: ["./entrypoint.sh"]
    depends_on:
      database:
        condition: service_healthy
        restart: true
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/health_check"]
      start_period: 30s
      interval: 30s
      timeout: 10s
      retries: 5

  database:
    image: postgres:17
    env_file:
      - .env
    volumes:
      - database_data:/var/lib/postgresql/data
    healthcheck:
      test:
        ["CMD", "pg_isready", "-U", "${POSTGRES_USER}", "-d", "${POSTGRES_DB}"]
      start_period: 30s
      interval: 30s
      timeout: 10s
      retries: 5

  reverse-proxy:
    restart: always
    build:
      context: .
      dockerfile: nginx/Dockerfile
    env_file:
      - .env
    ports:
      - ${NGINX_PORT}:${NGINX_PORT}
      - ${HTTPS_PORT}:${HTTPS_PORT}
    depends_on:
      server:
        condition: service_healthy
        restart: true

volumes:
  database_data: {}
